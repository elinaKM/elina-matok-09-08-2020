{"version":3,"sources":["icons/close-icon.svg","redux/actions/index.js","redux/actions/locationActions.js","constants/action-types.js","redux/actions/fiveDaysForecastActions.js","redux/actions/currentWeatherActions.js","redux/actions/favoritesActions.js","components/Button.js","components/CurrentConditions.js","constants/units.js","components/Card.js","utils/customization.js","components/FiveDaysForecast.js","components/Main.js","constants/api.js","utils/apiCalls.js","utils/debounce.js","components/Autocomplete.js","pages/Home.js","constants/pathes.js","components/LocationCard.js","pages/Favorites.js","pages/NotFound.js","components/Header.js","App.js","theme.js","redux/reducers/currentLocation.js","redux/reducers/fiveDaysForecast.js","redux/reducers/currentWeather.js","redux/reducers/favorites.js","redux/reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","allActions","locationActions","setLocation","payload","type","fiveDaysForecastActions","setFiveDaysForecast","currentWeatherActions","setCurrentWeather","favoritesActions","add","remove","StyledButton","styled","button","props","theme","colors","primary","buttonText","borderRadius","border","Button","disabled","onClick","children","toast","configure","Wrapper","div","Header","City","CityName","text","fontSizes","bigTitle","Temperature","smallTitle","WeatherText","megaTitle","AddToFavorites","CurrentConditions","useState","buttonDisabled","setButtonDisabled","favoriteAdded","setFavoriteAdded","useSelector","state","currentWeather","temp_metric","location","currentLocation","favorites","dispatch","useDispatch","useEffect","filter","item","key","length","success","name","error","card","Card","day","temp","getCurrentConditionsValues","conditions","Metric","Value","temp_imperial","Imperial","FiveDaysForecast","forcastArr","fiveDaysForecast","map","index","date","Array","getDay","unit","Main","loading","API_KEY","API_HOST","getCurrentConditions","fetch","then","response","json","debounce","callback","time","interval","args","clearTimeout","setTimeout","SelectAutoComplete","searchString","setSearchString","validString","setValidString","open","setOpen","options","setOptions","reg","empty","setResults","str","string","res","Key","LocalizedName","catch","test","Autocomplete","style","marginTop","onOpen","onClose","onChange","event","value","getOptionSelected","option","getOptionLabel","renderInput","params","TextField","e","target","label","variant","helperText","InputProps","endAdornment","CircularProgress","color","size","Home","routerLocation","useLocation","origin","setLoading","set5DaysWeather","DailyForecasts","Date","Maximum","Unit","console","log","ROOT","StyledLink","Link","Details","Icon","LocationCard","itemKey","setFailedToLoad","setConditions","src","closeIcon","alt","width","to","pathname","NoLoactionSaved","ListWrapper","Favorites","forcast","subTitle","NotFound","LogoLink","NavList","ul","Content","App","path","exact","component","subSubTitle","title","action","rootReducer","combineReducers","Boolean","window","hostname","match","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.34949303.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close-icon.dfb99fdf.svg\";","import locationActions from './locationActions'\r\nimport fiveDaysForecastActions from './fiveDaysForecastActions'\r\nimport currentWeatherActions from './currentWeatherActions'\r\nimport favoritesActions from './favoritesActions'\r\n\r\nconst allActions = {\r\n    locationActions,\r\n    fiveDaysForecastActions,\r\n    currentWeatherActions,\r\n    favoritesActions\r\n}\r\n\r\nexport default allActions","import { SET_LOCATION } from './../../constants/action-types'\r\n\r\nconst setLocation = (payload)  => {\r\n    return { \r\n        type: SET_LOCATION,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default {\r\n    setLocation\r\n}\r\n","export const SET_CITIES = \"SET_CITIES\";\r\nexport const SET_LOCATION = \"SET_LOCATION\";\r\nexport const SET_5DAYS = \"SET_5DAYS\";\r\nexport const SET_CURRENT_WEATHER = \"SET_CURRENT_WEATHER\";\r\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";","import { SET_5DAYS } from './../../constants/action-types'\r\n\r\nconst setFiveDaysForecast = (payload)  => {\r\n    return { \r\n        type: SET_5DAYS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default {\r\n    setFiveDaysForecast\r\n}\r\n","import { SET_CURRENT_WEATHER } from '../../constants/action-types'\r\n\r\nconst setCurrentWeather = (payload)  => {\r\n    return { \r\n        type: SET_CURRENT_WEATHER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default {\r\n    setCurrentWeather\r\n}\r\n","import { ADD_TO_FAVORITES } from './../../constants/action-types'\r\nimport { REMOVE_FROM_FAVORITES } from './../../constants/action-types'\r\n\r\nconst add = (payload) => {\r\n    return { \r\n        type: ADD_TO_FAVORITES,\r\n        payload\r\n    }\r\n}\r\n\r\nconst remove = (payload) => {\r\n    return { \r\n        type: REMOVE_FROM_FAVORITES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default {\r\n    add,\r\n    remove\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Button = (props) => (\r\n    <StyledButton disabled={props.disabled} onClick={props.onClick}>\r\n        {props.children}\r\n    </StyledButton>\r\n)\r\n\r\nconst StyledButton = styled.button`\r\n    background-color: ${props => props.theme.colors.primary};\r\n    border: none;\r\n    color: ${props => props.theme.colors.buttonText};\r\n    max-height: 40px;\r\n    font-family: inherit;\r\n    border-radius: ${props => props.theme.borderRadius.button};\r\n    &:hover, :focus {\r\n        outline: none;\r\n        box-shadow: 0 8px 6px -6px #423535;\r\n    }\r\n    &:disabled {\r\n        background-color: ${props => props.theme.colors.border};\r\n    }\r\n`\r\nexport default Button;","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Button from './Button'\r\nimport allActions from '../redux/actions'\r\nimport { CELCIUS } from '../constants/units'\r\n\r\ntoast.configure();\r\n\r\nconst CurrentConditions = () => {\r\n    const [buttonDisabled, setButtonDisabled] = useState(false);\r\n    const [favoriteAdded, setFavoriteAdded] = useState(false);\r\n\r\n    const { temp_metric, text } = useSelector(state => state.currentWeather);\r\n    const location = useSelector(state => state.currentLocation);\r\n    const favorites = useSelector(state => state.favorites);\r\n    const dispatch = useDispatch();\r\n\r\n    const addToFavorites = () => {\r\n        dispatch(allActions.favoritesActions.add(location));\r\n        setFavoriteAdded(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (favoriteAdded) {\r\n            if (favorites.filter((item) => item.key === location.key).length === 1) {\r\n                toast.success(`Congrats! ${location.name} is added to favorites!`);\r\n            } else {\r\n                toast.error(`Oops, something went wrong!`);\r\n            }\r\n        }\r\n    }, [favoriteAdded])\r\n\r\n    useEffect(() => {\r\n        setButtonDisabled(favorites.filter((item) => item.key === location.key).length === 1);\r\n    }, [favorites, location])\r\n\r\n    const unit = CELCIUS;\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Header>\r\n                <City>\r\n                    <CityName>{location.name}</CityName>\r\n                    <Temperature>{temp_metric ? `${temp_metric}°${unit}` : ``}</Temperature>\r\n                </City>\r\n                <AddToFavorites disabled={buttonDisabled} onClick={addToFavorites}>Add to Favorites</AddToFavorites>\r\n            </Header>\r\n            <WeatherText>{text}</WeatherText>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n`\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n`\r\n\r\nconst City = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-left: 30px;\r\n`\r\n\r\nconst CityName = styled.div`\r\n    color: ${props => props.theme.colors.text};\r\n    font-size: ${props => props.theme.fontSizes.bigTitle};\r\n    font-weight: bold;\r\n`\r\n\r\nconst Temperature = styled.div`\r\n    color: ${props => props.theme.colors.text};\r\n    font-size: ${props => props.theme.fontSizes.smallTitle};\r\n    font-weight: bold;\r\n`\r\n\r\nconst WeatherText = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 4% 0;\r\n    font-size: ${props => props.theme.fontSizes.megaTitle};\r\n`\r\n\r\nconst AddToFavorites = styled(Button)`\r\n    margin-right: 30px;\r\n`\r\n\r\nexport default CurrentConditions","export const CELCIUS = 'c';\r\nexport const FAHRENHEIT = 'f';","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { CELCIUS } from '../constants/units'\r\n\r\nconst unit = CELCIUS;\r\n\r\nconst Card = ({ day, temp }) =>\r\n    <Wrapper>\r\n        <p>{day}</p>\r\n        <p>{`${temp}°${unit}`}</p>\r\n    </Wrapper>\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100px;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    border-radius: ${props => props.theme.borderRadius.card};\r\n    background-color: ${props => props.theme.colors.card};\r\n    margin: 10px;\r\n    padding: 10px;\r\n`\r\n\r\nexport default Card","export const getWeekDay = (date) => {\r\n    const weekdays = new Array(\r\n        \"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"\r\n    );\r\n    return weekdays[date.getDay()];\r\n}\r\n\r\n\r\nexport const get5ForecastValues = (arr) => (\r\n    arr.map((day) => (\r\n        {\r\n            date: new Date(day.Date),\r\n            temp: day.Temperature.Maximum.Value,\r\n            unit: day.Temperature.Maximum.Unit\r\n        }\r\n    ))\r\n)\r\n\r\nexport const getCurrentConditionsValues = (conditions) => (\r\n    {\r\n        temp_metric: conditions.Temperature.Metric.Value,\r\n        temp_imperial: conditions.Temperature.Imperial.Value,\r\n        text: conditions.WeatherText\r\n    }\r\n)\r\n\r\nexport const getAutoCompleteOptionsValues = (arr) => (\r\n    arr.map((location) => (\r\n        {\r\n            key: location.Key,\r\n            name: location.LocalizedName\r\n        }\r\n    ))\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport Card from './Card'\r\nimport { getWeekDay } from '../utils/customization'\r\n\r\nconst FiveDaysForecast = () => {\r\n    const forcastArr = useSelector(state => state.fiveDaysForecast) || [];\r\n    return(\r\n        <Wrapper>\r\n            {forcastArr.map((item, index) => <Card key={index} day={getWeekDay(item.date)} temp={item.temp} unit={item.unit}/>)}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-around;\r\n`\r\n\r\nexport default FiveDaysForecast","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrentConditions from './CurrentConditions.js'\r\nimport FiveDaysForecast from './FiveDaysForecast.js'\r\n\r\nconst Main = ({loading}) => {\r\n    return(\r\n        <Wrapper>\r\n            {!loading &&\r\n                <>\r\n                    <CurrentConditions/>\r\n                    <FiveDaysForecast/>\r\n                </>\r\n            }\r\n            {loading && <WeatherText>Loading...</WeatherText>}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    border-radius: ${props => props.theme.borderRadius.card};\r\n    margin-top: 30px;\r\n    background-color: rgba(250,232,242, 0.5);\r\n`\r\n\r\nconst WeatherText = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 7% 0;\r\n    font-size: ${props => props.theme.fontSizes.megaTitle};\r\n`\r\n\r\nexport default Main","export const API_KEY = 'QjyL88wHO0jA2Ixzfp7X3BypGKB7ReXU';\r\n// export const API_KEY = 'mZKMDdXhzV8yWiJED6mKmyGr1NiotSTk';\r\n// export const API_KEY = 'GOyACs39myLzau6dS8FHBhBtJD6ofaBI';\r\nexport const API_HOST = 'https://dataservice.accuweather.com/';","import {API_HOST, API_KEY} from './../constants/api'\r\n\r\nexport const get5DaysWeather = (key) => (\r\n    fetch(`${API_HOST}forecasts/v1/daily/5day/${key}?metric=true&details=true&apikey=${API_KEY}`)\r\n    .then(response => response.json())\r\n)\r\n\r\nexport const getCurrentConditions = (key) => (\r\n    fetch(`${API_HOST}currentconditions/v1/${key}?apikey=${API_KEY}`)\r\n    .then(response => response.json())\r\n)\r\n\r\nexport const getAutoComplete = (string) => (\r\n    fetch(`${API_HOST}locations/v1/cities/autocomplete?q=${string}&apikey=${API_KEY}`)\r\n    .then(response => response.json())\r\n)\r\n","const debounce = (callback, time) => {\r\n  let interval;\r\n  return (...args) => {\r\n    clearTimeout(interval);\r\n    interval = setTimeout(() => {\r\n      interval = null;\r\n      callback(...args);\r\n    }, time);\r\n  };\r\n}\r\n\r\nexport default debounce","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { getAutoCompleteOptionsValues } from './../utils/customization'\r\nimport allActions from './../redux/actions/index.js'\r\nimport { getAutoComplete } from './../utils/apiCalls'\r\nimport debounce from './../utils/debounce'\r\n\r\ntoast.configure();\r\n\r\nconst SelectAutoComplete = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.currentLocation);\r\n\r\n    const [searchString, setSearchString] = useState(\"\");\r\n    const [validString, setValidString] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const loading = open && options.length === 0;\r\n    const reg = /^[a-z]+$/i;\r\n    const empty = /^\\s+$|^$/gi;\r\n\r\n\r\n    const setLocation = (location) => {\r\n        dispatch(allActions.locationActions.setLocation(location));\r\n    }\r\n\r\n    const setResults = (str) =>\r\n        getAutoComplete(str)\r\n            .then((res) => setOptions(getAutoCompleteOptionsValues(res)))\r\n            .catch(function(error) {\r\n                setOpen(false);\r\n                toast.error(`Oops! ${error}`);\r\n            });\r\n\r\n    useEffect(() => {\r\n        setValidString(reg.test(searchString) || empty.test(searchString));\r\n    }, [searchString]);\r\n\r\n    useEffect(() => {\r\n        if (searchString.length === 0 || !validString){\r\n            setOpen(false);\r\n        } else {\r\n            debounce(setResults(searchString), 1000);\r\n        }\r\n    }, [searchString]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            style={{ marginTop: \"30px\" }}\r\n            open={open}\r\n            onOpen={() => {\r\n                setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n            onChange={(event, value) => {\r\n                if (value) {\r\n                    setLocation(value);\r\n                }\r\n            }}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            getOptionLabel={(option) => option.name}\r\n            options={options}\r\n            loading={loading}\r\n\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    onChange={e => setSearchString(e.target.value)}\r\n                    label=\"Search for location\"\r\n                    variant=\"outlined\"\r\n                    helperText={!validString ? \"Searching should be done in English letters only\" : \"\"}\r\n                    InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                            <>\r\n                                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                            </>\r\n                        ),\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SelectAutoComplete","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport allActions from './../redux/actions/index.js'\r\nimport Main from './../components/Main'\r\nimport Autocomplete from './../components/Autocomplete'\r\nimport { get5DaysWeather, getCurrentConditions } from './../utils/apiCalls'\r\nimport { get5ForecastValues, getCurrentConditionsValues } from './../utils/customization'\r\n\r\nconst Home = () => {\r\n    const routerLocation = useLocation();\r\n    const location = useSelector(state => state.currentLocation);\r\n    const [origin] = useState(routerLocation.state ? routerLocation.state.currentLocation: location);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setCurrentConditions = () => {\r\n        getCurrentConditions(location.key).then((res) => {\r\n            dispatch(allActions.currentWeatherActions.setCurrentWeather(getCurrentConditionsValues(res[0])));\r\n        }).catch(function(error) {\r\n            console.log(error)\r\n        });\r\n    }\r\n    \r\n    const set5DaysWeather = () => {\r\n        get5DaysWeather(location.key)\r\n            .then((res) => {\r\n                dispatch(allActions.fiveDaysForecastActions.setFiveDaysForecast(get5ForecastValues(res.DailyForecasts)));\r\n            }).then(setLoading(false))\r\n            .catch(function(error) {\r\n                console.log(error)\r\n            });\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch(allActions.locationActions.setLocation(origin));\r\n    }, [origin]);\r\n\r\n    useEffect(() => {\r\n        setCurrentConditions();\r\n        set5DaysWeather();\r\n    }, [location]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Autocomplete/>\r\n            <Main loading={loading}/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    margin-right: 5%;\r\n    margin-left: 5%;\r\n`\r\n\r\nexport default Home","export const ROOT=\"/elina-matok-09-08-2020\"\r\nexport const FAVORITES=\"/favorites\"","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Button from './Button'\r\nimport allActions from '../redux/actions'\r\nimport { getCurrentConditions } from './../utils/apiCalls'\r\nimport { getCurrentConditionsValues } from './../utils/customization'\r\nimport { ROOT } from './../constants/pathes'\r\nimport closeIcon from './../icons/close-icon.svg'\r\nimport { CELCIUS } from '../constants/units'\r\n\r\nconst LocationCard = ({ name, itemKey }) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [failedToLoad, setFailedToLoad] = useState(true);\r\n    const [conditions, setConditions] = useState({ temp_metric: \"\", text: \"\" });\r\n    const dispatch = useDispatch();\r\n\r\n    const onRemove = () => dispatch(allActions.favoritesActions.remove(itemKey));\r\n\r\n    const setCurrentConditions = () => {\r\n        getCurrentConditions(itemKey).then((res) => {\r\n            setConditions(getCurrentConditionsValues(res[0]));\r\n        }).then(setLoading(!loading))\r\n        .catch((error) => {\r\n            setFailedToLoad(true);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCurrentConditions();\r\n    }, []);\r\n\r\n    const unit = CELCIUS;\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Icon>\r\n                <img src={closeIcon} alt=\"close\" onClick={onRemove} style={{width: \"10px\"}}/>\r\n            </Icon>\r\n            <CityName>{name}</CityName>\r\n            {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n            {!loading ? <Details>{`${conditions.temp_metric}°${unit}`}</Details> : null}\r\n            {!loading ? <Details>{conditions.text}</Details> : null}\r\n            <StyledLink to={{\r\n                pathname: ROOT,\r\n                state: {\r\n                    currentLocation: {\r\n                            name: name,\r\n                            key: itemKey\r\n                    }\r\n                }\r\n            }}>\r\n                <Button> Goo to forecast </Button>\r\n            </StyledLink>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100px;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    border-radius: ${props => props.theme.borderRadius.card};\r\n    background-color: rgba(250,232,242, 0.5);\r\n    margin: 10px;\r\n    padding: 10px;\r\n`\r\n\r\nconst CityName = styled.div`\r\n    color: ${props => props.theme.colors.text};\r\n    font-weight: bold;\r\n    margin-bottom: 15px;\r\n`\r\n\r\nconst Details = styled.div`\r\n    color: ${props => props.theme.colors.text};\r\n    margin-bottom: 15px;\r\n`\r\n\r\nconst Icon = styled.div`\r\n  margin-left: 85%;\r\n  width: 10px;\r\n  &:hover, :focus {\r\n    fill: ${props => props.theme.colors.primary};\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport default LocationCard","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport LocationCard from './../components/LocationCard'\r\n\r\nconst Favorites = (props) => {\r\n\r\n    const forcast = useSelector(state => state.favorites);\r\n\r\n    return(\r\n        <ListWrapper>\r\n            {forcast.length > 0 && forcast.map((item) => <LocationCard key={item.key} itemKey={item.key} name={item.name}/>)}\r\n            {forcast.length === 0 && \r\n                <NoLoactionSaved>\r\n                    No favorites found, go ahead and add some!\r\n                </NoLoactionSaved>\r\n            }\r\n        </ListWrapper>\r\n    )\r\n}\r\n\r\nconst NoLoactionSaved = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 50px auto;\r\n`\r\n\r\nconst ListWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    margin: 20px;\r\n`\r\n\r\nexport default Favorites","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst NotFound = () => \r\n    <Wrapper>\r\n        Page Not Found\r\n    </Wrapper>\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 100px;\r\n    font-size: ${props => props.theme.fontSizes.subTitle};\r\n`\r\nexport default NotFound","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { ROOT, FAVORITES } from './../constants/pathes'\r\n\r\n\r\nconst Header = () => (\r\n    <Wrapper>\r\n        <LogoLink to={ROOT}>\r\n            Herolo Weather Task\r\n        </LogoLink>\r\n        <NavList>\r\n            <li>\r\n                <StyledLink to={ROOT}>\r\n                    Home\r\n                </StyledLink>\r\n            </li>\r\n            <li>\r\n                <StyledLink to={ROOT + FAVORITES}>\r\n                    Favorites\r\n                </StyledLink>\r\n            </li>\r\n        </NavList>\r\n    </Wrapper>\r\n)\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: rgba(250,232,242, 0.5);\r\n    padding: 10px;\r\n    box-shadow: 0 8px 6px -6px ${props => props.theme.colors.border};\r\n`\r\n\r\nconst LogoLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: ${props => props.theme.colors.text};\r\n    font-weight: bold;\r\n`\r\n\r\nconst NavList = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    margin: 0;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: ${props => props.theme.colors.text};\r\n    /* font-size: ${props => props.theme.fontSizes.smallTitle}; */\r\n    &:hover , :focus{\r\n        color: ${props => props.theme.colors.primary};\r\n    }\r\n    margin-right: 20px;\r\n`\r\n\r\nexport default Header","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\r\nimport styled from 'styled-components'\r\nimport Home from './pages/Home'\r\nimport Favorites from './pages/Favorites'\r\nimport NotFound from './pages/NotFound'\r\nimport Header from './components/Header'\r\nimport { ROOT, FAVORITES } from './constants/pathes'\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Wrapper>\r\n        <Header />\r\n        <Content>\r\n          <Switch>\r\n            <Route path={ROOT} exact component={Home} />\r\n            <Route path={ROOT + FAVORITES} exact component={Favorites} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Content>\r\n        </Wrapper>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  /* height: 100vh; */\r\n  font-size: 14px;\r\n  font-family: Nexa, Arial, Helvetica, sans-serif;\r\n  color: ${(props) => props.theme.colors.text};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Content = styled.div``;\r\n\r\nexport default App;\r\n","const theme = {\r\n  colors: {\r\n    primary: \"#87ABE0\",\r\n    text: \"#555555\",\r\n    buttonText: \"#FFFFFF\",\r\n    card: \"#FFFFFF\",\r\n    border: \"#A4A7AC\",\r\n  },\r\n  borderRadius: {\r\n    button: \"4px\",\r\n    card: \"10px\",\r\n  },\r\n  fontSizes: {\r\n    text: \"1rem\", // 16px\r\n    smallTitle: \"1.125rem\", // 18px\r\n    subSubTitle: \"1.25rem\", // 20px\r\n    subTitle: \"1.5rem\", // 24px\r\n    title: \"1.75rem\", //28px\r\n    bigTitle: \"2rem\", // 32px\r\n    megaTitle: \"2.25rem\", // 36px\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import { SET_LOCATION } from '../../constants/action-types'\r\n\r\nconst currentLocation = (state = {key: \"215854\", name: \"Tel Aviv\"}, action) => {\r\n  switch (action.type) {\r\n        case SET_LOCATION:\r\n          state = action.payload;\r\n          return state;\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default currentLocation","import { SET_5DAYS } from '../../constants/action-types'\r\n\r\nconst fiveDaysForecast = (state = [], action) => {\r\n  switch (action.type) {\r\n        case SET_5DAYS:\r\n          state = action.payload;\r\n          return state;\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default fiveDaysForecast","import { SET_CURRENT_WEATHER } from '../../constants/action-types'\r\n\r\nconst currentWeather = (state = {}, action) => {\r\n  switch (action.type) {\r\n        case SET_CURRENT_WEATHER:\r\n          state = action.payload;\r\n          return state;\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default currentWeather","import { ADD_TO_FAVORITES } from './../../constants/action-types'\r\nimport { REMOVE_FROM_FAVORITES } from './../../constants/action-types'\r\n\r\nconst favorites = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_FAVORITES:\r\n      return [\r\n        ...state,\r\n        action.payload\r\n      ]\r\n    case REMOVE_FROM_FAVORITES:\r\n      return state.filter((item) => item.key !== action.payload);\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default favorites","import {combineReducers} from 'redux'\r\nimport currentLocation from './currentLocation'\r\nimport fiveDaysForecast from './fiveDaysForecast'\r\nimport currentWeather from './currentWeather'\r\nimport favorites from './favorites'\r\n\r\nconst rootReducer = combineReducers({\r\n    currentLocation,\r\n    fiveDaysForecast,\r\n    currentWeather,\r\n    favorites\r\n})\r\n\r\nexport default rootReducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport './index.css';\r\nimport App from './App'\r\nimport theme from './theme'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './redux/reducers/index.js'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}