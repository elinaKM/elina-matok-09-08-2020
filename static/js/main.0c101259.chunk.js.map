{"version":3,"sources":["redux/actions/index.js","redux/actions/autoCompleteActions.js","constants/action-types.js","redux/actions/locationActions.js","redux/actions/fiveDaysForecastActions.js","redux/actions/currentWeatherActions.js","redux/actions/favoritesActions.js","components/Button.js","components/CurrentConditions.js","components/Card.js","utils/customization.js","components/FiveDaysForecast.js","components/Main.js","constants/api.js","components/Autocomplete.js","utils/apiCalls.js","pages/Home.js","components/LocationCard.js","constants/pathes.js","pages/Favorites.js","pages/NotFound.js","components/Header.js","App.js","theme.js","redux/reducers/autoCompleteCities.js","redux/reducers/currentLocation.js","redux/reducers/fiveDaysForecast.js","redux/reducers/currentWeather.js","redux/reducers/favorites.js","redux/reducers/index.js","serviceWorker.js","index.js"],"names":["allActions","autoCompleteActions","setAutoComplete","payload","type","locationActions","setLocation","fiveDaysForecastActions","setFiveDaysForecast","currentWeatherActions","setCurrentWeather","favoritesActions","add","remove","StyledButton","styled","button","props","theme","colors","primary","buttonText","fontSizes","text","borderRadius","border","Button","disabled","onClick","children","Wrapper","div","Header","City","CityName","smallTitle","Temperature","WeatherText","megaTitle","CurrentConditions","useState","buttonDisabled","setButtonDisabled","useSelector","state","currentWeather","temp_metric","location","currentLocation","favorites","dispatch","useDispatch","useEffect","filter","item","key","length","name","card","Card","day","temp","unit","getCurrentConditionsValues","conditions","console","log","Metric","Value","temp_imperial","Imperial","FiveDaysForecast","forcastArr","fiveDaysForecast","map","index","date","Array","getDay","Main","loading","API_KEY","API_HOST","SelectAutoComplete","searchString","setSearchString","open","setOpen","options","setOptions","active","locations","a","fetch","response","json","arr","Key","LocalizedName","Autocomplete","id","style","marginTop","onOpen","onClose","onChange","event","value","getOptionSelected","option","getOptionLabel","renderInput","params","TextField","e","target","label","variant","InputProps","endAdornment","CircularProgress","color","size","getCurrentConditions","then","Home","routerLocation","useLocation","origin","setLoading","locationKey","set5DaysWeather","res","DailyForecasts","Date","Maximum","Unit","StyledLink","Link","Details","LocationCard","itemKey","to","pathname","NoLoactionSaved","ListWrapper","Favorites","forcast","subTitle","NotFound","LogoLink","NavList","ul","Content","App","path","exact","component","secondary","screenWidthBreakPoints","mobile","ipad","picture","smallIconText","sponsoredLabel","smallDescription","description","subText","subSubTitle","title","bigTitle","autoCompleteCities","action","rootReducer","combineReducers","Boolean","window","hostname","match","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c101259.chunk.js","sourcesContent":["import autoCompleteActions from './autoCompleteActions'\r\nimport locationActions from './locationActions'\r\nimport fiveDaysForecastActions from './fiveDaysForecastActions'\r\nimport currentWeatherActions from './currentWeatherActions'\r\nimport favoritesActions from './favoritesActions'\r\n\r\nconst allActions = {\r\n    autoCompleteActions,\r\n    locationActions,\r\n    fiveDaysForecastActions,\r\n    currentWeatherActions,\r\n    favoritesActions\r\n}\r\n\r\nexport default allActions","import { SET_CITIES } from './../../constants/action-types'\r\n\r\nconst setAutoComplete = (payload)  => {\r\n    return { \r\n        type: SET_CITIES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default {\r\n    setAutoComplete\r\n}\r\n","export const SET_CITIES = \"SET_CITIES\";\r\nexport const SET_LOCATION = \"SET_LOCATION\";\r\nexport const SET_5DAYS = \"SET_5DAYS\";\r\nexport const SET_CURRENT_WEATHER = \"SET_CURRENT_WEATHER\";\r\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";","import { SET_LOCATION } from './../../constants/action-types'\r\n\r\nconst setLocation = (payload)  => {\r\n    return { \r\n        type: SET_LOCATION,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default {\r\n    setLocation\r\n}\r\n","import { SET_5DAYS } from './../../constants/action-types'\r\n\r\nconst setFiveDaysForecast = (payload)  => {\r\n    return { \r\n        type: SET_5DAYS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default {\r\n    setFiveDaysForecast\r\n}\r\n","import { SET_CURRENT_WEATHER } from '../../constants/action-types'\r\n\r\nconst setCurrentWeather = (payload)  => {\r\n    return { \r\n        type: SET_CURRENT_WEATHER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default {\r\n    setCurrentWeather\r\n}\r\n","import { ADD_TO_FAVORITES } from './../../constants/action-types'\r\nimport { REMOVE_FROM_FAVORITES } from './../../constants/action-types'\r\n\r\nconst add = (payload) => {\r\n    return { \r\n        type: ADD_TO_FAVORITES,\r\n        payload\r\n    }\r\n}\r\n\r\nconst remove = (payload) => {\r\n    return { \r\n        type: REMOVE_FROM_FAVORITES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default {\r\n    add,\r\n    remove\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Button = (props) => (\r\n    <StyledButton disabled={props.disabled} onClick={props.onClick}>\r\n        {props.children}\r\n    </StyledButton>\r\n)\r\n\r\nconst StyledButton = styled.button`\r\n    background-color: ${props => props.theme.colors.primary};\r\n    border: none;\r\n    color: ${props => props.theme.colors.buttonText};\r\n    padding: 10px 20px;\r\n    /* font-size: ${props => props.theme.fontSizes.text}; */\r\n    font-family: inherit;\r\n    border-radius: ${props => props.theme.borderRadius.button};\r\n    &:hover, :focus {\r\n        outline: none;\r\n        box-shadow: 0 8px 6px -6px #423535;\r\n    }\r\n    &:disabled {\r\n        background-color: ${props => props.theme.colors.border};\r\n    }\r\n`\r\nexport default Button;","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Button from './Button'\r\nimport allActions from '../redux/actions'\r\n\r\nconst CurrentConditions = () => {\r\n    const [buttonDisabled, setButtonDisabled] = useState(false);\r\n\r\n    const {temp_metric, text} = useSelector(state => state.currentWeather);\r\n    const location = useSelector(state => state.currentLocation);\r\n    const favorites = useSelector(state => state.favorites);\r\n    const dispatch  = useDispatch();\r\n\r\n    const addToFavorites = () => {\r\n        dispatch(allActions.favoritesActions.add(location))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setButtonDisabled(favorites.filter((item) => item.key === location.key).length === 1);\r\n    },[favorites, location])\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Header>\r\n                <City>\r\n                    <CityName>{location.name}</CityName>\r\n                    <Temperature>{`${temp_metric}° c`}</Temperature>\r\n                </City>\r\n                <Button disabled={buttonDisabled} onClick={addToFavorites}>Add to Favorites</Button>\r\n            </Header>\r\n            <WeatherText>{text}</WeatherText>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n`\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n`\r\n\r\nconst City = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n`\r\n\r\nconst CityName = styled.div`\r\n    color: ${props => props.theme.colors.text};\r\n    font-size: ${props => props.theme.fontSizes.smallTitle};\r\n`\r\n\r\nconst Temperature = styled.div`\r\n    color: ${props => props.theme.colors.text};\r\n    font-size: ${props => props.theme.fontSizes.text};\r\n`\r\n\r\nconst WeatherText = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 6% 0;\r\n    font-size: ${props => props.theme.fontSizes.megaTitle};\r\n`\r\n\r\nexport default CurrentConditions","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Card = ({day, temp, unit}) => {\r\n    return (\r\n        <Wrapper>\r\n            <p>{day}</p>\r\n            <p>{`${temp}° ${unit}`}</p>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100px;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    border-radius: ${props => props.theme.borderRadius.card};\r\n    background-color: ${props => props.theme.colors.card};\r\n    margin: 10px;\r\n    padding: 10px;\r\n`\r\n\r\nexport default Card","import { NonceProvider } from \"react-select\";\r\n\r\nexport const getWeekDay = (date) => {\r\n\r\n    const weekdays = new Array(\r\n        \"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"\r\n    );\r\n    return weekdays[date.getDay()];\r\n}\r\n\r\n\r\nexport const get5ForecastValues = (arr) => (\r\n\r\n    arr.map((day) => (\r\n        {\r\n            date: new Date(day.Date),\r\n            temp: day.Temperature.Maximum.Value,\r\n            unit: day.Temperature.Maximum.Unit\r\n        }\r\n    ))\r\n)\r\n\r\nexport const getCurrentConditionsValues = (conditions) => {\r\n    console.log(\"Parsing!!!\");\r\n    return (\r\n        {\r\n            name: \"None\",\r\n            temp_metric: conditions.Temperature.Metric.Value,\r\n            temp_imperial: conditions.Temperature.Imperial.Value,\r\n            text: conditions.WeatherText\r\n        }\r\n    )\r\n}\r\n\r\nexport const getAutoCompleteOptionsValues = (arr) => {\r\n    console.log(arr);\r\n    return (\r\n        arr.map((location) => (\r\n            {\r\n                key: location.Key,\r\n                name: location.LocalizedName\r\n            }\r\n        ))\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Card from './Card'\r\nimport { getWeekDay } from '../utils/customization'\r\n\r\nconst FiveDaysForecast = () => {\r\n    const forcastArr = useSelector(state => state.fiveDaysForecast) || [];\r\n    return(\r\n        <Wrapper>\r\n            {forcastArr.map((item, index) => <Card key={index} day={getWeekDay(item.date)} temp={item.temp} unit={item.unit}/>)}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport default FiveDaysForecast","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrentConditions from './CurrentConditions.js'\r\nimport FiveDaysForecast from './FiveDaysForecast.js'\r\n\r\nconst Main = ({loading}) => {\r\n    return(\r\n        <Wrapper>\r\n            {!loading &&\r\n                <>\r\n                    <CurrentConditions/>\r\n                    <FiveDaysForecast/>\r\n                </>\r\n            }\r\n            {loading && <WeatherText>Loading...</WeatherText>}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    border-radius: ${props => props.theme.borderRadius.card};\r\n    margin-top: 30px;\r\n    background-color: rgba(250,232,242, 0.5);\r\n`\r\n\r\nconst WeatherText = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 7% 0;\r\n    font-size: ${props => props.theme.fontSizes.megaTitle};\r\n`\r\n\r\nexport default Main","export const API_KEY = 'mZKMDdXhzV8yWiJED6mKmyGr1NiotSTk';\r\n//'GOyACs39myLzau6dS8FHBhBtJD6ofaBI';\r\nexport const API_HOST = 'http://dataservice.accuweather.com/';","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { API_HOST, API_KEY } from './../constants/api'\r\nimport { getAutoCompleteOptionsValues } from './../utils/customization'\r\nimport allActions from './../redux/actions/index.js'\r\n\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\nconst SelectAutoComplete = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name, key} = useSelector(state => state.currentLocation);\r\n\r\n    const [searchString, setSearchString] = useState(name);\r\n    const [open, setOpen] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const loading = open && options.length === 0;\r\n\r\n\r\n    const setLocation = (location) => {\r\n        dispatch(allActions.locationActions.setLocation(location));\r\n    }\r\n\r\n    useEffect(() => {\r\n        let active = true;\r\n        let locations = [];\r\n\r\n        if (!loading) {\r\n            return undefined;\r\n        }\r\n\r\n        (async () => {\r\n            console.log(searchString);\r\n            const response = await fetch(`${API_HOST}locations/v1/cities/autocomplete?q=${searchString}&apikey=${API_KEY}`);\r\n            if (response && active)  {\r\n                locations = await response.json();\r\n                // locations = getAutoCompleteOptionsValues(locations);\r\n            // if (active) {\r\n                // setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\r\n                setOptions(getAutoCompleteOptionsValues(locations));\r\n            // }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [loading, searchString]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    console.log(searchString);\r\n\r\n    return (\r\n        <Autocomplete\r\n            id=\"asynchronous-demo\"\r\n            style={{ marginTop: \"30px\" }}\r\n            open={open}\r\n            onOpen={() => {\r\n                setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n            onChange={(event, value) => {\r\n                if (value) {\r\n                    console.log(value);\r\n                    setLocation(value);\r\n                }\r\n            }}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            getOptionLabel={(option) => option.name}\r\n            options={options}\r\n            loading={loading}\r\n\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    onChange={e => setSearchString(e.target.value)}\r\n                    label=\"Location\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                            <>\r\n                                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                            </>\r\n                        ),\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SelectAutoComplete","import {API_HOST, API_KEY} from './../constants/api'\r\n\r\nexport const get5DaysWeather = (key) => (\r\n    // fetch(`${API_HOST}forecasts/v1/daily/5day/${key}?metric=true&details=true&apikey=${API_KEY}`, {mode: 'no-cors'})\r\n    fetch(`${API_HOST}forecasts/v1/daily/5day/${key}?metric=true&details=true&apikey=${API_KEY}`)\r\n    .then(response => response.json())\r\n)\r\n\r\nexport const getCurrentConditions = (key) => (\r\n    fetch(`${API_HOST}currentconditions/v1/${key}?apikey=${API_KEY}`)\r\n    .then(response => response.json())\r\n)\r\n\r\nexport const getAutoComplete = (string) => (\r\n    fetch(`${API_HOST}locations/v1/cities/autocomplete?q=${string}&apikey=${API_KEY}`)\r\n    .then(response => response.json())\r\n)\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport allActions from './../redux/actions/index.js'\r\nimport Main from './../components/Main'\r\nimport Autocomplete from './../components/Autocomplete'\r\nimport { get5DaysWeather, getCurrentConditions, getAutoComplete } from './../utils/apiCalls'\r\nimport { get5ForecastValues, getCurrentConditionsValues } from './../utils/customization'\r\n\r\nconst Home = () => {\r\n    const routerLocation = useLocation();\r\n    const [origin, setOrigin] = useState(routerLocation.state ? routerLocation.state.currentLocation: {key: \"215854\", name: \"Tel Aviv\"});\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const locationKey = useSelector(state => state.currentLocation.key);\r\n    const favorites = useSelector(state => state.favorites);\r\n\r\n    const setCurrentConditions = () => {\r\n        getCurrentConditions(locationKey).then((res) => {\r\n            dispatch(allActions.currentWeatherActions.setCurrentWeather(getCurrentConditionsValues(res[0])));\r\n        }).then(set5DaysWeather());\r\n    }\r\n    \r\n    const set5DaysWeather = () => {\r\n        get5DaysWeather(locationKey)\r\n            .then((res) => {\r\n                dispatch(allActions.fiveDaysForecastActions.setFiveDaysForecast(get5ForecastValues(res.DailyForecasts)));\r\n            }).then(setLoading(false));\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch(allActions.locationActions.setLocation(origin));\r\n    }, [origin]);\r\n\r\n    //Commented out to save api calls. Uncomment in the end\r\n    // useEffect(() => {\r\n    //     setCurrentConditions();\r\n    // }, [locationKey]);\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            <button onClick={() => {\r\n                setCurrentConditions();\r\n            }}>Fetch</button>\r\n\r\n            <button onClick={() => {\r\n                dispatch(allActions.locationActions.setLocation({key: \"3431644\", name: \"Telanaipura\"}));\r\n            }}>set location to Telanaipura</button>\r\n            \r\n            <Autocomplete/>\r\n            \r\n            <Main loading={false}/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    margin-right: 5%;\r\n    margin-left: 5%;\r\n`\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Button from './Button'\r\nimport allActions from '../redux/actions'\r\nimport { getCurrentConditions } from './../utils/apiCalls'\r\nimport { getCurrentConditionsValues } from './../utils/customization'\r\nimport { ROOT } from './../constants/pathes'\r\n\r\nconst LocationCard = ({ name, itemKey }) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [conditions, setConditions] = useState({ temp_metric: \"\", text: \"\" });\r\n    const dispatch = useDispatch();\r\n\r\n    const onRemove = () => dispatch(allActions.favoritesActions.remove(itemKey));\r\n\r\n    const setCurrentConditions = () => {\r\n        getCurrentConditions(itemKey).then((res) => {\r\n            setConditions(getCurrentConditionsValues(res[0]));\r\n        }).then(setLoading(!loading));\r\n    }\r\n    \r\n    // Commented out to save api calls! Uncomment in the end\r\n    // useEffect(() => {\r\n    //     setCurrentConditions();\r\n    // }, []);\r\n\r\n    return (\r\n        <StyledLink to={{\r\n            pathname: ROOT,\r\n            state: {\r\n                currentLocation: {\r\n                        name: name,\r\n                        key: itemKey\r\n                }\r\n            }\r\n        }}>\r\n            <Wrapper>\r\n                <CityName>{name}</CityName>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {!loading ? <Details>{`${conditions.temp_metric}° c`}</Details> : null}\r\n                {!loading ? <Details>{conditions.text}</Details> : null}\r\n                <Button onClick={onRemove}>Remove</Button>\r\n            </Wrapper>\r\n        </StyledLink>\r\n    )\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100px;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    border-radius: ${props => props.theme.borderRadius.card};\r\n    background-color: rgba(250,232,242, 0.5);\r\n    margin: 10px;\r\n    padding: 10px;\r\n`\r\n\r\nconst CityName = styled.div`\r\n    color: ${props => props.theme.colors.text};\r\n    font-weight: bold;\r\n    margin-bottom: 15px;\r\n`\r\n\r\nconst Details = styled.div`\r\n    color: ${props => props.theme.colors.text};\r\n    margin-bottom: 15px;\r\n`\r\n\r\nexport default LocationCard","export const ROOT=\"/\"\r\nexport const FAVORITES=\"/favorites\"","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport LocationCard from './../components/LocationCard'\r\n\r\nconst Favorites = (props) => {\r\n\r\n    const forcast = useSelector(state => state.favorites);\r\n\r\n    return(\r\n        <ListWrapper>\r\n            {forcast.length > 0 && forcast.map((item) => <LocationCard key={item.key} itemKey={item.key} name={item.name}/>)}\r\n            {forcast.length === 0 && \r\n                <NoLoactionSaved>\r\n                    No favorites found, go ahead and add some!\r\n                </NoLoactionSaved>\r\n            }\r\n        </ListWrapper>\r\n    )\r\n}\r\n\r\nconst NoLoactionSaved = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 50px auto;\r\n`\r\n\r\nconst ListWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    margin: 20px;\r\n`\r\n\r\nexport default Favorites","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst NotFound = () => \r\n    <Wrapper>\r\n        Page Not Found\r\n    </Wrapper>\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 100px;\r\n    font-size: ${props => props.theme.fontSizes.subTitle};\r\n`\r\nexport default NotFound","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { ROOT, FAVORITES } from './../constants/pathes'\r\n\r\n\r\nconst Header = () => (\r\n    <Wrapper>\r\n        <LogoLink to={ROOT}>\r\n            Herolo Weather Task\r\n        </LogoLink>\r\n        <NavList>\r\n            <li>\r\n                <StyledLink to={ROOT}>\r\n                    Home\r\n                </StyledLink>\r\n            </li>\r\n            <li>\r\n                <StyledLink to={FAVORITES}>\r\n                    Favorites\r\n                </StyledLink>\r\n            </li>\r\n        </NavList>\r\n    </Wrapper>\r\n)\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: rgba(250,232,242, 0.5);\r\n    padding: 10px;\r\n    box-shadow: 0 8px 6px -6px ${props => props.theme.colors.border};\r\n`\r\n\r\nconst LogoLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: ${props => props.theme.colors.text};\r\n    /* font-size: ${props => props.theme.fontSizes.smallTitle}; */\r\n`\r\n\r\nconst NavList = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    margin: 0;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: ${props => props.theme.colors.text};\r\n    /* font-size: ${props => props.theme.fontSizes.smallTitle}; */\r\n    &:hover , :focus{\r\n        color: ${props => props.theme.colors.primary};\r\n    }\r\n    margin-right: 20px;\r\n`\r\n\r\nexport default Header","import React from 'react'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport styled from 'styled-components'\nimport Home from './pages/Home'\nimport Favorites from './pages/Favorites'\nimport NotFound from './pages/NotFound'\nimport Header from './components/Header'\nimport { ROOT, FAVORITES } from './constants/pathes'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Wrapper>\n        <Header />\n        <Content>\n          <Switch>\n            <Route path={ROOT} exact component={Home} />\n            <Route path={FAVORITES} exact component={Favorites} />\n            <Route component={NotFound} />\n          </Switch>\n        </Content>\n        </Wrapper>\n    </BrowserRouter>\n  );\n}\n\nconst Wrapper = styled.div`\n  /* height: 100vh; */\n  font-size: 14px;\n  font-family: Nexa, Arial, Helvetica, sans-serif;\n  color: ${(props) => props.theme.colors.text};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst Content = styled.div``;\n\nexport default App;\n","const theme = {\r\n  colors: {\r\n    primary: \"#87ABE0\",\r\n    secondary: \"#FAE8F2\",\r\n    text: \"#555555\",\r\n    buttonText: \"#FFFFFF\",\r\n    card: \"#FFFFFF\",\r\n    border: \"#A4A7AC\",\r\n  },\r\n  screenWidthBreakPoints: {\r\n    mobile: \"420px\",\r\n    ipad: \"780px\",\r\n  },\r\n  borderRadius: {\r\n    button: \"4px\",\r\n    card: \"10px\",\r\n    picture: \"50%\",\r\n  },\r\n  fontSizes: {\r\n    smallIconText: \"0.5rem\", // 8px\r\n    sponsoredLabel: \"0.75rem\", // 12px\r\n    smallDescription: \"0.8125rem\", // 13px\r\n    description: \"0.875rem\", // 14px\r\n    subText: \"0.9365rem\", // 15px\r\n    text: \"1rem\", // 16px\r\n    smallTitle: \"1.125rem\", // 18px\r\n    subSubTitle: \"1.25rem\", // 20px\r\n    subTitle: \"1.5rem\", // 24px\r\n    title: \"1.75rem\", //28px\r\n    bigTitle: \"2rem\", // 32px\r\n    megaTitle: \"2.25rem\", // 36px\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import { SET_CITIES } from '../../constants/action-types'\r\n\r\nconst autoCompleteCities = (state = [\"Tel-Aviv\", \"Haifa\"], action) => {\r\n  switch (action.type) {\r\n        case SET_CITIES:\r\n          state = action.payload;\r\n          return state;\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default autoCompleteCities","import { SET_LOCATION } from '../../constants/action-types'\r\n\r\nconst currentLocation = (state = {key: \"215854\", name: \"Tel Aviv\"}, action) => {\r\n  switch (action.type) {\r\n        case SET_LOCATION:\r\n          state = action.payload;\r\n          return state;\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default currentLocation","import { SET_5DAYS } from '../../constants/action-types'\r\n\r\nconst fiveDaysForecast = (state = [], action) => {\r\n  switch (action.type) {\r\n        case SET_5DAYS:\r\n          state = action.payload;\r\n          return state;\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default fiveDaysForecast","import { SET_CURRENT_WEATHER } from '../../constants/action-types'\r\n\r\nconst currentWeather = (state = {}, action) => {\r\n  switch (action.type) {\r\n        case SET_CURRENT_WEATHER:\r\n          state = action.payload;\r\n          return state;\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport default currentWeather","import { ADD_TO_FAVORITES } from './../../constants/action-types'\r\nimport { REMOVE_FROM_FAVORITES } from './../../constants/action-types'\r\n\r\nconst favorites = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_FAVORITES:\r\n      return [\r\n        ...state,\r\n        action.payload\r\n      ]\r\n    case REMOVE_FROM_FAVORITES:\r\n      return state.filter((item) => item.key !== action.payload);\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default favorites","import {combineReducers} from 'redux'\r\nimport autoCompleteCities from './autoCompleteCities'\r\nimport currentLocation from './currentLocation'\r\nimport fiveDaysForecast from './fiveDaysForecast'\r\nimport currentWeather from './currentWeather'\r\nimport favorites from './favorites'\r\n\r\nconst rootReducer = combineReducers({\r\n    autoCompleteCities,\r\n    currentLocation,\r\n    fiveDaysForecast,\r\n    currentWeather,\r\n    favorites\r\n})\r\n\r\nexport default rootReducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport './index.css';\r\nimport App from './App'\r\nimport theme from './theme'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './redux/reducers/index.js'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}